name: Deploy AWS EC2
on:
  push:
    branches:
      - develop
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Get Github action IP
        id: ip
        uses: haythem/public-ip@v1.2

      - name: AWS configure
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID  }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Add github actions IP to security group
        env:
          AWS_SECURITY_GROUP: ${{ secrets.AWS_SECURITY_GROUP }}
        run: |
          aws ec2 authorize-security-group-ingress --group-id ${{ env.AWS_SECURITY_GROUP }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/16
          sleep 10
          
      - name: Deploy on AWS EC2
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY  }}
          HOSTNAME: ${{ secrets.HOSTNAME  }}
          USER_NAME: ${{ secrets.USERNAME  }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          echo "$PRIVATE_KEY" > private_key.pem && chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${USER_NAME}@${HOSTNAME} '
           sudo apt-get update
           sudo apt -y install docker.io
           sudo service docker restart
           sudo docker run -p 80:8888 -p 8080:8080 -p 9090:9090 -e TZ=Europe/Amsterdam -d webgoat/goatandwolf:v8.2.2
          '
          rm -rf private_key.pem
          #comment
          
      - name: Remove github actions IP from security group
        env:
          AWS_SECURITY_GROUP: ${{ secrets.AWS_SECURITY_GROUP }}
        run: |
          aws ec2 revoke-security-group-ingress --group-id ${{ env.AWS_SECURITY_GROUP }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/16
        if: always()
  
  netspaker_scan_job:
    runs-on: ubuntu-20.04
    steps:
      # Starts actions with given inputs
      - name: Start Netsparker Enterprise Scan
        uses: netsparker/Netsparker-Cloud-GitHub-Actions@v0.0.1
        id: netsparker-enterprise-scan-step
        with:
          website-id: '72b09204-888a-48b2-2f5c-af04018b5c96'
          scan-type: 'FullWithPrimaryProfile'
          profile-id: '00000000-0000-0000-0000-000000000000'
          user-id: ${{ secrets.NETSPARKER_USER_ID }}
          api-token: ${{ secrets.NETSPARKER_API_TOKEN }}
          base-url: 'https://www.netsparkercloud.com'
      # Displays output for action (Demo purpose only)
      - name: Display Scan Request Message
        run: echo "${{ steps.netsparker-enterprise-scan-step.outputs.scan-message }}"
      
